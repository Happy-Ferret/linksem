(*Generated by Lem from abis/amd64/abi_amd64_symbol_table.lem.*)
open HolKernel Parse boolLib bossLib;
open lem_numTheory lem_basic_classesTheory;

val _ = numLib.prefer_num();



val _ = new_theory "abi_amd64_symbol_table"

(** [abi_amd64_symbol_table], AMD64 ABI specific definitions for the ELF symbol
  * table.
  *)

(*open import Basic_classes*)
(*open import Num*)

(** AMD64 specific symbol types.  See doc/ifunc.txt and Section 4.3 of the
  * ABI.
  *)

(** Optional, like [stt_func] but always points to a function or piece of
  * executable code that takes no arguments and returns a function pointer.
  *)
val _ = Define `
 (stt_abi_amd64_gnu_ifunc : num =( 12))`;


(** [string_of_abi_amd64_symbol_type m] produces a string based representation
  * of AMD64 symbol type [m].
  *)
(*val string_of_abi_amd64_symbol_type : natural -> string*)
val _ = export_theory()

