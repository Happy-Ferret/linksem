open import List
open import Num
open import String

open import Error
open import Missing_pervasives
open import Show

type string_table
  = Strings of (char * string)

(** [mk_string_table base sep] constructs a string table using [base] as the
  * base string and [sep] as the delimiting character to use to split [base]
  * when trying to access the string stored in the table using the functions below.
  *)
val mk_string_table : string -> char -> string_table
let mk_string_table base sep =
  Strings (sep, base)

(** [empty] is the empty string table with an arbitrary choice of delimiter.
  *)
val empty : string_table
let empty = Strings (Missing_pervasives.null_char, "")

(** [get_delimiating_character tbl] returns the delimiting character associated
  * with the string table [tbl], used to split the strings.
  *)
val get_delimiting_character : string_table -> char
let get_delimiting_character tbl =
  match tbl with
    | Strings (sep, base) -> sep
  end

(** [get_base_string tbl] returns the base string of the string table [tbl].
  *)
val get_base_string : string_table -> string
let get_base_string tbl =
  match tbl with
    | Strings (sep, base) -> base
  end

(** [get_strings tbl] obtains the strings stored in the table, separated using
  * the designated separator as a delimiting character.
  *)
val get_strings : string_table -> list string
let get_strings tbl =
  match tbl with
    | Strings (sep, base) ->
        Missing_pervasives.split_string_on_char base sep
  end

(** [size tbl] returns the number of strings separated by the designated
  * separator in the string table [tbl].
  *)
val size : string_table -> nat
let size tbl =
  List.length (get_strings tbl)

(** [get_string_at index tbl] returns the string starting at character [index]
  * from the start of the base string until the first occurrence of the delimiting
  * character.
  *)
val get_string_at : nat -> string_table -> error string
let get_strings_at index tbl = Fail "TODO"

instance (Show string_table)
  let show tbl = unlines (get_strings tbl)
end