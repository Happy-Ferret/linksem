open import List
open import String

open import Byte_sequence
open import Error
open import Missing_pervasives

val acquire_byte_list : string -> error (list byte)
declare ocaml target_rep function acquire_byte_list = `Byte_sequence_wrapper.acquire_char_list`

val acquire : string -> error byte_sequence
let acquire fname =
  acquire_byte_list fname >>= fun bs ->
  return (Sequence bs)

val serialise_byte_list : string -> list byte -> error unit
declare ocaml target_rep function serialise_byte_list = `Byte_sequence_wrapper.serialise_char_list`

val serialise : string -> byte_sequence -> error unit
let serialise fname ss =
  match ss with
    | Sequence ts -> serialise_byte_list fname ts
  end