open import Function
open import String
open import Tuple

open import Byte_sequence
open import Default_printing
open import Error
open import Missing_pervasives
open import Show

open import Elf_header
open import Elf_executable_file
open import Elf_program_header_table
open import Elf_types

open import Sail_interface

open import Abi_amd64_elf_header
open import Abi_amd64_serialisation

let default_hdr_bdl =
  (default_os_specific_print, default_proc_specific_print)

let default_pht_bdl =
  (default_os_specific_print, default_proc_specific_print)

let default_sht_bdl =
  (default_os_specific_print, default_proc_specific_print, default_user_specific_print)

let _ =
  let res =
    let ef = Abi_amd64_serialisation.abi_amd64_generate_executable_file
                (Byte_sequence.create 255 null_char) 255 255 in
    Elf_executable_file.bytes_of_elf64_executable_file ef >>= fun bytes ->
    Byte_sequence.serialise "test/elf-test.out" bytes >>= fun s ->
    return (show s)
  in
    match res with
      | Fail err  -> Missing_pervasives.print ("[!]: " ^ err)
      | Success e -> Missing_pervasives.print e
    end
