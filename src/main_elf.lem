open import Function
open import String
open import Tuple

open import Byte_sequence
open import Default_printing
open import Error
open import Missing_pervasives
open import Show
open import Assert_extra

open import Elf_header
open import Elf_file
open import Elf_program_header_table
open import Elf_types_native_uint

open import Harness_interface
open import Sail_interface

open import Abi_amd64_elf_header
open import Abi_amd64_serialisation

let default_hdr_bdl =
  (default_os_specific_print, default_proc_specific_print)

let default_pht_bdl =
  (default_os_specific_print, default_proc_specific_print)

let default_sht_bdl =
  (default_os_specific_print, default_proc_specific_print, default_user_specific_print)

let _ =
  let res =
    let arg =
      match argv with
        | progname::fname::more -> fname
        | _                     -> failwith "usage: main_elf <fname>"
      end
    in
    Byte_sequence.acquire arg    >>= fun bs0 ->
    Elf_file.read_elf32_file bs0 >>= fun f1  ->
    return (Harness_interface.harness_string_of_elf32_header f1.elf32_file_header)
  in
    match res with
      | Fail err  -> Missing_pervasives.println ("[!]: " ^ err)
      | Success e -> Missing_pervasives.println (show e)
    end
