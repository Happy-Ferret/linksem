open import Function
open import String
open import Tuple

open import Byte_sequence
open import Default_printing
open import Error
open import Missing_pervasives
open import Show

open import Elf_header
open import Elf_executable_file
open import Elf_linking_file2
open import Elf_linking_file3
open import Elf_types

open import Sail_interface

open import Abi_amd64_serialisation

let default_hdr_bdl =
  (default_os_specific_print, default_proc_specific_print)

let default_pht_bdl =
  (default_os_specific_print, default_proc_specific_print)

let default_sht_bdl =
  (default_os_specific_print, default_proc_specific_print, default_user_specific_print)

let _ =
  let res =
    Byte_sequence.acquire "test/a.out" >>= fun bs0 ->
    Elf_executable_file.read_elf32_executable_file bs0 >>= fun ef ->
    Elf_executable_file.get_elf32_global_symbol_init ef >>= fun syms ->
    return (show syms)
  in
    match res with
      | Fail err  -> Missing_pervasives.print ("[!]: " ^ err)
      | Success e -> Missing_pervasives.print e
    end
