chapter {* Generated by Lem from adaptors/sail_interface.lem. *}

theory "Sail_interface" 

imports 
 	 Main
	 (* IMPORTS MASKED FOR ANONYMOUS REVIEW *)

begin 

(*open import Basic_classes*)
(*open import Function*)
(*open import Maybe*)
(*open import Num*)
(*open import String*)
(*open import Tuple*)

(*open import Assert_extra*)

(*open import Byte_sequence*)
(*open import Error*)
(*open import Missing_pervasives*)
(*open import Show*)

(*open import Elf_header*)
(*open import Elf_file*)
(*open import Elf_interpreted_section*)
(*open import String_table*)
(*open import Elf_symbol_table*)
(*open import Elf_types_native_uint*)

datatype executable_process_image
  = ELF_Class_32 " elf32_executable_process_image "
  | ELF_Class_64 " elf64_executable_process_image "

(*val populate : string -> error executable_process_image*)

(*val obtain_global_symbol_init_info : string -> error global_symbol_init_info*)

(*val populate_and_obtain_global_symbol_init_info : string -> error (executable_process_image * global_symbol_init_info)*)
end
